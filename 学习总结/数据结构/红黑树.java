public class Main {
    /**
     * 红黑树是一种二叉查找树
     * 有如下性质：
     * 1.节点是红色或者黑色
     * 2.根节点是黑色
     * 3.叶子节点（null节点）为黑色
     * 4.红色节点必须有两个黑色的子节点
     * 5.从任一节点到其每个叶子的简单路径包含相同个数的黑色节点
     *
     * 插入操作
     * 新插入的节点均为红色节点，当父节点为黑色时，停止修复，完成操作
     * 分三种情况（父节点均为红色）
     * 1.叔叔节点为红色：将父节点和叔叔节点的颜色与祖父节点进行互换，若祖父节点处颜色不符合规则，则继续修复
     * 2.叔叔节点为空，且新节点，父节点，祖父节点在一条线上：将父节点进行旋转，并和祖父节点互换颜色
     * 3.叔叔节点为空，且新节点，父节点，祖父节点不在一条线上：先将新节点进行旋转，使其变成情况2，在由情况2进行修复
     *
     *
     */
}